name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Build app for production
      run: yarn build
      env:
        CI: true
      
    - name: Upload build artifact
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: ./dist

  unit-test:
    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run unit tests
      run: yarn test --coverage
      env:
        CI: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        
  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          wait-on: 'http://localhost:3000'

      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos


  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [unit-test, e2e-test, build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: ./dist

    - name: Deploy to production
      run: npx surge ./dist ${{ secrets.SURGE_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

    - name: Release
      run: npx semantic-release
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
